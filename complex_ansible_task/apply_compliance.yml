- name: Apply Compliance Template
  hosts: routers
  gather_facts: no  # Disable the default facts gathering
  tasks:
    - name: Gather IOS facts
      ios_facts:
      register: facts

    - name: Ensure the /tmp/backups directory exists
      file:
        path: /tmp/backups
        state: directory
        mode: '0755'

    - name: Set timestamp for file names
      set_fact:
        timestamp: "{{ lookup('pipe', 'date +%Y%m%d%H%M%S') }}"

    - name: Backup running configuration
      ios_command:
        commands:
          - show running-config
      register: running_config

    - name: Save running config to file
      copy:
        content: "{{ running_config.stdout[0] }}"
        dest: "/tmp/backups/{{ inventory_hostname }}_running_config_{{ timestamp }}.txt"

    - name: Load compliance template
      template:
        src: compliance_template.j2
        dest: "/tmp/{{ inventory_hostname }}_compliance.txt"
      vars:
        ansible_net_interfaces: "{{ facts.ansible_net_interfaces }}"

    - name: Apply compliance template
      ios_config:
        src: /tmp/{{ inventory_hostname }}_compliance.txt

    - name: Backup running configuration after applying template
      ios_command:
        commands:
          - show running-config
      register: post_running_config

    - name: Save post-change running config to file
      copy:
        content: "{{ post_running_config.stdout[0] }}"
        dest: "/tmp/backups/{{ inventory_hostname }}_post_running_config_{{ timestamp }}.txt"

    - name: Compare post-change config with compliance template
      shell: diff /tmp/backups/{{ inventory_hostname }}_post_running_config_{{ timestamp }}.txt /tmp/{{ inventory_hostname }}_compliance.txt
      register: diff_output
      ignore_errors: yes

    - name: Report compliance status
      debug:
        msg: "Compliance check for {{ inventory_hostname }}: {{ diff_output.stdout if diff_output.stdout else 'Compliant' }}"
